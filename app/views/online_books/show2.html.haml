%link{:rel => "stylesheet", :type => "text/css", :href => "//cloud.typography.com/683468/690822/css/fonts.css"}
%div{:class => 'top_wrapper'}
	%div{:class => 'dark'}
		%div{:class => 'heading_container'}
			%div{:class => 'logo'}
				%a{:href => "http://www.ushmm.org/", :class => "logo-link"}
					= image_tag "logo-alt-head.png"
			%span{:class => 'breadcrumbs'}
				Home > Collections > Digital Collections
			%br
			%span{:class => 'heading'}
				=@online_book.title
		%div{:class => 'display_container'}

			%div{:id => 'selected_page', :style => ''}
				%div{:id => 'flip_div', :style => ''}
					%div{:id => 'flip_div2', :style => ''}
			%div{:id => 'clickable-thumbs', :style => ""}
				%ul
					- puts "pagenumarray is #{@page_num_array.inspect}"
					- @page_num_array.each do |page_id|
						- puts "Page id is #{page_id}"
						- page = @pages_hash[page_id]
						- puts page.inspect
						%li{:style => 'display: inline; list-style-type: none; padding-right: 10px; padding-bottom: 0; margin-bottom: 0;'}
							%div{:style => 'display: inline-block;'}
								%img{:id => "thumb_#{page_id}",
									:src => page[:derivative_url],
									:style => 'max-height: 100px; max-width: 100px; margin: 0;',
									'data-page_id' => page_id}
								%div{:class => 'page_designation'}
									=page_id
									// =page[:designation]
			%div{:id => 'info_panel'}
				%div{:href => '#', :id => 'carousel_button_left'}
				%div{:href => '#', :id => 'carousel_button_right'}
				%div{:id => 'link_area'}
					%a{:href=>'http://www.ushmm.org/information/exhibitions/online-features/special-focus/the-alfred-rosenberg-diary'}
						More about The Alfred Rosenburg Diary →
					%br
					%a{:href=>'http://collections.ushmm.org/search/catalog/irn518182'}
						See catalog record for this collection →
				%div{:id => 'transcript_header'} TRANSCRIPT
				%div{:id => 'transcript_area'}
					[no transcript for this page]
				/ %div{:id => 'selected_page_area', :style => 'border: 2px solid green; position:relative; height: 90%; width: 50%;'}


%script
	!= "book_data = #{@online_book.to_json};"
	!= "pages_data = #{@online_book_json_data};"
	!= "page_num_array = #{@page_num_array};"


:javascript
	$(function() {

		oara_next_page_id = function(page_id, step) {
			//
			// pass step=1 for next, step=-1 for prev

			page_id = parseInt(page_id);
			next_index = page_num_array.indexOf(page_id)+step;
			if (page_num_array[next_index] !== undefined) {
				return page_num_array[next_index].toString();
			} else {
				return null;
			}
		}


		oara_get_url_param = function(name) {
			return decodeURIComponent((new RegExp('[?|&]' + name + '=' + '([^&;]+?)(&|#|;|$)').exec(location.search)||[,""])[1].replace(/\+/g, '%20'))||null;
		}

		oara_flip_to_page = function(page_id) {

				// alert('next: ' + oara_next_page_id(page_id, 1))
				// alert('prev: ' + oara_next_page_id(page_id, -1))

			    // alert('img#thumb_'+page_id);
			    var clicked_thumbnail = $('img#thumb_'+page_id)
			    // alert(clicked_thumbnail);

			    // Center the selected thumbnail.
			    // When complete, change the page being viewed (using a transition).
			    // Then, reinitialize the zoomer.
			    clicked_thumbnail.scrollintoview({  // jQuery scrollintoview plugin
			    	duration: 300,
			    	complete: function () {
					    // FLIP!?
						$("#selected_page #flip_div #flip_div2").flippy({
						    // verso:"Hi !",
						    verso:'<img id="selected_page_image" src="' + pages_data[page_id].derivative_url + 
						    '" data-zoom-image="' + pages_data[page_id].url + '" style="max-height: 100%; max-width: 100%;">',
						    direction:"LEFT",
						    duration:"200",
						    color_target: "#000000",
						    onFinish: function() {
							    oara_initialize_elevateZoom();
			    			    transcript_area.html(pages_data[page_id].transcript||'(no transcript)');
						    }
						});
			    	}
			    });  

			    // Deactivate zoomer:
			    oara_deactivate_elevateZoom();

			    // Remove highlight from all thumbnails:
			    $('div#clickable-thumbs img').removeClass('selected_thumbnail')
			    // Highlight the selected thumbnail
			    $(clicked_thumbnail).addClass('selected_thumbnail')

			    // Pull the transcript into its display area:
			    var transcript_area = $('#transcript_area')
			    transcript_area.empty();



			    // Change the content of the page area:
			    // var page = $('#selected_page #flip_div');
			    // page.empty();
			    // page.html('<img id="selected_page_image" src="' + pages_data[clicked_thumbnail.dataset.page_id].derivative_url + '" data-zoom-image="' + clicked_thumbnail.dataset.zoom_image + '" style="max-height: 100%; max-width: 100%;">');

			    // Re-activate zoomer:
			    // oara_initialize_elevateZoom();
		}

		oara_initialize_elevateZoom = function() {
			$("\#selected_page_image").elevateZoom({tint: true, tintColour: "#000", tintOpacity: 0.4,
				easing: true,
				easingAmount: 3,
				zoomWindowHeight: 400,
				zoomWindowWidth: 400,
				zoomWindowFadeIn: 1000,
				zoomWindowFadeOut: 200,
				zoomTintFadeIn: 1000,
				zoomTintFadeOut: 200,
				lensFadeIn: 400,
				lensFadeOut: 200,
				scrollZoom: true,
				responsive: true,
				loadingIcon: true,
				zoomWindowPosition: 'clickable-thumbs'
			});
		}

		oara_deactivate_elevateZoom = function() {
		    // Need to do this to de-activate zoomer before switching images!
		    // Otherwise, artifacts hang around.
		    var page_image = $('#selected_page_image');
		    page_image.removeData('elevateZoom');
		    $('.zoomContainer').remove();
		    //page_image.remove();			
		}

		oara_change_to_page_id = function(new_page_id) {
			current_page_id = new_page_id;
			History.pushState({page_id:new_page_id}, "State "+new_page_id, "?page="+new_page_id);
		}

		oara_change_to_next_page = function () {
			oara_change_to_page_id(oara_next_page_id(current_page_id, 1));
			return false;
		}

		oara_change_to_prev_page = function () {
			oara_change_to_page_id(oara_next_page_id(current_page_id, -1));
			return false;
		}

		var clickable_thumbs = $('#clickable-thumbs img')

		clickable_thumbs.each( function(i,this_thumb){
			this_thumb.onclick = function(e){
			    var evt = e || window.event;
			    var clicked_thumbnail_element = evt.target || evt.srcElement;
			    var page_id;
			    if (clicked_thumbnail_element.dataset !== undefined) {
				    page_id = clicked_thumbnail_element.dataset.page_id;  // standard way
			    } else {
					page_id = clicked_thumbnail_element.getAttribute('data-page_id');  // thanks IE!
				}

				// History.pushState({page_id:page_id}, "State "+page_id, "?page="+page_id);
				oara_change_to_page_id(page_id);
			}
		});


		(function(window,undefined){
			// Prepare
			var History = window.History; // Note: We are using a capital H instead of a lower h

			if ( !History.enabled ) {
				 // History.js is disabled for this browser.
				 // This is because we can optionally choose to support HTML4 browsers or not.
				alert('History.js is disabled.');
				return false;
			}

			// Bind to StateChange Event
			History.Adapter.bind(window,'statechange',function(){ // Note: We are using statechange instead of popstate
				var State = History.getState(); // Note: We are using History.getState() instead of event.state
				oara_flip_to_page(State.data.page_id);
			});

		    // Put the initial state in the History:
			var State = History.getState(); // Note: We are using History.getState() instead of event.state
			var initial_page = oara_get_url_param('page');
			oara_flip_to_page(initial_page);

			current_page_id = initial_page;  // (global)
		    History.pushState({page_id: initial_page}, $("title").text(), State.urlPath);
		    // !!! Must scrollintoview here!

		    $('#carousel_button_left').on('click', null, null, function(e) { oara_change_to_prev_page(); });
		    $('#carousel_button_right').on('click', null, null, function(e) { oara_change_to_next_page(); });

			$( "body" ).keydown(function(eventObject) {
				var leftArrow = 37;
				var rightArrow = 39;
				var pressed = eventObject.which;
				if (pressed == leftArrow) {
					oara_change_to_prev_page();
					return false;
				}
				if (pressed == rightArrow) {
					oara_change_to_next_page();
					return false;
				}

				return true;
			});


		})(window);

	});
